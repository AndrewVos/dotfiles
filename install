#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

UPGRADE="no"
SOFTWARE_GROUPS=(cli database dev gui)
VERBOSE="no"

for var in "$@"
do
  if [[ "$var" = "--upgrade" ]]; then
    UPGRADE="yes"
  elif [[ "$var" = "--server" ]]; then
    SOFTWARE_GROUPS=(cli)
  elif [[ "$var" == "--verbose" ]]; then
    VERBOSE="yes"
  fi
done

export LOG_FILE=$(mktemp)
function write-log-if-error {
  if [[ $? -gt 0 ]]; then
    cat "$LOG_FILE"
  fi
}
trap write-log-if-error EXIT

function print-log {
  if [[ "$VERBOSE" = "yes" ]]; then
    tee -a "$LOG_FILE"
  else
    cat >> "$LOG_FILE"
  fi
}

if [[ "$UPGRADE" = "yes" ]]; then
  echo "Syncing packages..."
  sudo apt update -y | print-log 2>&1
  sudo apt upgrade -y | print-log 2>&1
fi

PREVIOUS_PWD="$(pwd)"

for SOFTWARE_GROUP in "${SOFTWARE_GROUPS[@]}"; do
  PACKAGES_PATH="packages/$SOFTWARE_GROUP.txt"
  SNAPS_PATH="snaps/$SOFTWARE_GROUP.txt"

  if [[ -f "$PACKAGES_PATH" ]]; then
    PACKAGES="$(cat $PACKAGES_PATH)"
    sudo apt-get install -y $PACKAGES 2>&1 | print-log
  fi

  if [[ -f "$SNAPS_PATH" ]]; then
    SNAPS="$(cat $SNAPS_PATH)"
    sudo snap install $SNAPS 2>&1 | print-log
  fi

  for INSTALLER in $(ls "installers/$SOFTWARE_GROUP/"); do
    cd $(mktemp -d)
    echo "Syncing $SOFTWARE_GROUP/$INSTALLER..."
    UPGRADE=$UPGRADE $PREVIOUS_PWD/installers/$SOFTWARE_GROUP/$INSTALLER 2>&1 | print-log

    cd "$PREVIOUS_PWD"
  done
done
