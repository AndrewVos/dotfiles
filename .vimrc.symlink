set shell=/bin/zsh

" vundle {{{
  set nocompatible
  filetype off
  set rtp+=~/.vim/bundle/vundle/
  call vundle#rc()
  Bundle 'gmarik/vundle'
" }}}

" backup to ~/.tmp {{{
  set backup
  set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
  set backupskip=/tmp/*,/private/tmp/* 
  set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
  set writebackup
" }}}

Bundle 'tpope/vim-sensible'
Bundle 'tpope/vim-unimpaired'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-cucumber'
Bundle 'tpope/vim-fugitive'
Bundle 'jamessan/vim-gnupg'
Bundle 'kchmck/vim-coffee-script'
Bundle 'dgryski/vim-godef'
Bundle 'Blackrush/vim-gocode'
Bundle 'scrooloose/syntastic'
"webapi-vim is needed for Gist.vim
Bundle 'mattn/webapi-vim'
Bundle 'vim-scripts/Gist.vim'

" Syntastic {{{
  let g:syntastic_always_populate_loc_list=1
" }}}

" tags {{{
  Bundle 'xolox/vim-misc'
  Bundle 'xolox/vim-easytags'
  let g:easytags_dynamic_files = 1
" }}}

" Jump to last cursor position {{{
  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif
" }}}

" unite {{{
  Bundle 'Shougo/vimproc.vim'
  Bundle 'Shougo/unite.vim'
  " Always start in insert mode
	let g:unite_enable_start_insert = 1
  " Search settings
  call unite#filters#matcher_default#use(['matcher_fuzzy'])
  call unite#filters#sorter_default#use(['sorter_rank'])
  call unite#set_profile('files', 'smartcase', 1)
  " Open files
  nnoremap <C-P> :<C-u>Unite  -buffer-name=files   -start-insert buffer file_rec/async:!<cr>
  " Search like ack
  nnoremap <Leader>f :Unite grep:. -no-empty -no-start-insert<cr>

  " Use Ack
  let g:unite_source_grep_command='ack-grep'
  let g:unite_source_grep_default_opts='--no-heading --no-color'
  let g:unite_source_grep_recursive_opt=''

  autocmd FileType unite call s:unite_settings()
  function! s:unite_settings()
    let b:SuperTabDisabled=1
    imap <silent><buffer><expr> <C-x> unite#do_action('split')
    imap <silent><buffer><expr> <C-v> unite#do_action('vsplit')

    nmap <buffer> <ESC> <Plug>(unite_exit)
  endfunction
" }}}

" ruby {{{
  autocmd filetype ruby setlocal expandtab autoindent tabstop=2 shiftwidth=2 softtabstop=2
  autocmd filetype ruby setlocal list listchars=tab:»·,trail:·
" }}}

" {{{ Go
  autocmd BufWritePre *.go Fmt
  autocmd filetype go setlocal noexpandtab tabstop=2 shiftwidth=2
" }}}

" vim {{{
  set shortmess=I
  set hlsearch
  set ignorecase
  set smartcase
  set hidden
  set omnifunc=syntaxcomplete#Complete
  set completeopt=longest,menuone
  highlight Search ctermfg=black ctermbg=blue
" }}}
