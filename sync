#!/usr/bin/python

import subprocess
import os

BASE_PACKAGES = [
  "base",
  "linux",
  "linux-firmware",
  "btrfs-progs",
  "efibootmgr",
  "zram-generator",

  "nvidia",
  "xf86-video-amdgpu",

  "amd-ucode",
  "intel-ucode",

  "laptop-mode-tools",

  "iwd",

  "pulseaudio",

  "acpi",
  "acpid",
  "acpilight",

  "vi",
  "yay",
]

PACKAGES = open("packages.txt","r").read().splitlines()
AUR_PACKAGES = open("aur-packages.txt", "r").read().splitlines()

def retrieve_commonly_installed_packages():
  result = subprocess.run(['pacman', '-Qq', '-g', 'base-devel'], stdout=subprocess.PIPE)
  result = result.stdout.decode('utf-8')
  result = result.splitlines()
  return result

def retrieve_installed_packages():
  result = subprocess.run(['pacman', '-Qq'], stdout=subprocess.PIPE)
  result = result.stdout.decode('utf-8')
  result = result.splitlines()
  return result

def retrieve_explicitly_installed_packages():
  result = subprocess.run(['pacman', '-Qeqt'], stdout=subprocess.PIPE)
  result = result.stdout.decode('utf-8')
  result = result.splitlines()

  commonly_installed_packages = retrieve_commonly_installed_packages()
  trimmed = []

  for package in result:
    if package not in BASE_PACKAGES and package not in commonly_installed_packages:
      trimmed.append(package)

  return trimmed

def retrieve_packages_to_remove():
  all_packages = PACKAGES + AUR_PACKAGES
  packages_to_remove = []

  for explicitly_installed_package in retrieve_explicitly_installed_packages():
    if explicitly_installed_package not in all_packages:
      packages_to_remove.append(explicitly_installed_package)

  return packages_to_remove

def retrieve_packages_to_add():
  result = []
  installed = retrieve_installed_packages()
  for package in PACKAGES:
    if package not in installed:
      result.append(package)
  return result

def retrieve_aur_packages_to_add():
  result = []
  installed = retrieve_installed_packages()
  for package in AUR_PACKAGES:
    if package not in installed:
      result.append(package)
  return result

def execute(command):
  print(command)
  exit_code = os.system(command)
  if exit_code > 0:
    exit(exit_code)

def main():
  if retrieve_packages_to_remove():
    execute(" \\\n  ".join(["sudo pacman -R"] + retrieve_packages_to_remove()))
  if retrieve_packages_to_add():
    execute(" \\\n  ".join(["sudo pacman -S"] + retrieve_packages_to_add()))
  if retrieve_aur_packages_to_add():
    execute(" \\\n  ".join(["yay -S"] + retrieve_aur_packages_to_add()))

main()
